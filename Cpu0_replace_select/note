
#if CH >= CH8_2
SDValue Cpu0TargetLowering::
lowerSELECT(SDValue Op, SelectionDAG &DAG) const
{
#if 0
  return Op;
#else
  const TargetInstrInfo *TII = getTargetMachine().getInstrInfo();
  MachineRegisterInfo &RegInfo = DAG.getMachineFunction().getRegInfo();
  const TargetRegisterClass *RC = getRegClassFor(MVT::getIntegerVT(4));
  unsigned Reg1 = RegInfo.createVirtualRegister(RC);
  SDValue Operand1 = Op.getOperand(1);
  SDValue Operand2 = Op.getOperand(2);
  const BasicBlock *LLVM_BB = BB->getBasicBlock();
  MachineBasicBlock *MBB1 = MF->CreateMachineBasicBlock(LLVM_BB);
  MachineBasicBlock *MBB2 = MF->CreateMachineBasicBlock(LLVM_BB);
  BuildMI(MBB1, DL, TII->get(Cpu0::ADDiu), Reg1)
    .addReg(Cpu0::ZERO).addImm(0);
  MachineFunction::iterator It = BB;
  ++It;
  MF->insert(It, MBB1);
  MF->insert(It, MBB2);
  SDValue SetCC = DAG.getNode(ISD::BRCOND, DL,
                                  DAG.getVTList(MVT::i32), (Op.getOperand(0));
  SDValue SetCC = DAG.getNode(ISD::BR, DL,
                                  DAG.getVTList(MVT::i32), (Op.getOperand(0));
#endif
}
#endif

